pipeline {
  agent { label 'agent' }
  environment {
    LW_ACCESS_TOKEN = credentials('lw-access-token')
    LW_ACCOUNT_NAME = credentials('lw-account-name')
  }
  stages {
    stage('checkout') {
      steps {
        checkout scm
      }
    }
    stage('Build') {
      steps {
        sh 'scripts/build_frontend.sh'
      }
    }
    stage('Create Image') {
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-access-token') {
            def customImage = docker.build("detcaccounts/ticketing-bff:${env.BUILD_ID}-${EXECUTOR_NUMBER}", "-f docker/Dockerfile_frontend ./artifacts")
            customImage.push()
          }
        }
      }
    }
    stage('Scan') {
        steps {
            sh "curl -L https://github.com/lacework/lacework-vulnerability-scanner/releases/latest/download/lw-scanner-linux-amd64 -o lw-scanner"
            sh "chmod +x lw-scanner"
            sh "./lw-scanner image evaluate detcaccounts/ticketing-bff ${env.BUILD_ID}-${EXECUTOR_NUMBER} --build-id ${env.BUILD_ID} --build-plan ${JOB_NAME} -c --fail-on-violation-exit-code 1 --critical-violation-exit-code 2 --high-violation-exit-code 3 --medium-violation-exit-code 4 --low-violation-exit-code 5 --info-violation-exit-code 6 --policy --html --html-file scan-result.html"
        }
    }
    stage('Deploy') {
      steps {
        sh "export DETC_TICKETING_IMAGE_TAG=\"${env.BUILD_ID}-${env.EXECUTOR_NUMBER}\";detc create --plan https://raw.githubusercontent.com/lacework-demo/ticketing-app/main/deploy/ticketing-gcp.yaml --apply --trace --step frontend-k8s"
      }
    }
  }
  post {
    always {
        archiveArtifacts artifacts: 'scan-result.html', fingerprint: true
    }
  }
}
